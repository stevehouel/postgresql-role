---
# tasks file for postgresql

- name: Ensure PostgreSQL container has an up-to-date configuration
  docker:
    name: "{{ postgresql_container_name }}"
    image: "{{ athena_registry_url }}/postgresql:{{ postgresql_version }}"
    state: "reloaded"
    pull: always
    ports:
      - "{{ postgresql_port }}:5432"
    volumes:
      - "{{ postgresql_config_path }}/config.yml:/etc/docker/registry/config.yml"
      - "{{ postgresql_data_path }}:/var/lib/postgresql/data"
    env:
      POSTGRES_USER="{{ postgresql_username }}",
      POSTGRES_PASSWORD="{{ postgresql_password }}"
  tags:
    - docker

- name: Ensure latest version of Netcat is installed and up to date (Debian)
  apt:
    name: "{{ item }}"
    update_cache: "yes"
    state: "latest"
    allow_unauthenticated: "yes"
  with_items:
    - netcat
  when: ansible_os_family == "Debian"
  environment:
    http_proxy: "{{ http_proxy }}"
    https_proxy: "{{ https_proxy }}"
    no_proxy: "{{ no_proxy }}"
  tags: docker

- name: Ensure latest version of Netcat is installed and up to date (CentOS)
  yum:
    name: "{{ item }}"
    state: "latest"
  with_items:
    - nmap-ncat
  when: ansible_os_family == "RedHat"
  environment:
    http_proxy: "{{ http_proxy }}"
    https_proxy: "{{ https_proxy }}"
    no_proxy: "{{ no_proxy }}"
  tags: docker

- name: Waiting for PostgreSQL container accepts connection (Debian)
  shell: x="99"; while [ "$x" != "0" ]; do var=`nc -z {{ ansible_host }} {{ postgresql_port }}`;x=`echo $?`;sleep 1; done
  when: ansible_os_family == "Debian"
  tags:
    - docker
    
- name: Waiting for PostgreSQL container accepts connection (CentOS)
  shell: x="99"; while [ "$x" != "0" ]; do var=`ncat {{ ansible_host }} {{ postgresql_port }} </dev/null >/dev/null`;x=`echo $?`;sleep 1; done
  when: ansible_os_family == "RedHat"
  tags:
    - docker